// 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

// 有效字符串需满足：

// 左括号必须用相同类型的右括号闭合。
// 左括号必须以正确的顺序闭合。
// 注意空字符串可被认为是有效字符串。

// 示例 1:

// 输入: "()"
// 输出: true
// 示例 2:

// 输入: "()[]{}"
// 输出: true
// 示例 3:

// 输入: "(]"
// 输出: false
// 示例 4:

// 输入: "([)]"
// 输出: false
// 示例 5:

// 输入: "{[]}"
// 输出: true

/**
 * @param {string} s
 * @return {boolean}
 */

// js 模拟栈。，栈即Array. 入栈即push ,出栈即pop.遍历遇到左括号入栈，遇到右括号出栈，判断是否配对。不配对即错误。
var isValid = function(s) {

};


// 大佬法 ，如果成对，必首先至少一个成对， 7.78%  18.18%， 空间性能不算好。
// var isValid = function(s) {
// 	while (s.indexOf('()') != -1 || s.indexOf('{}') != -1 || s.indexOf('[]') != -1) {
// 		s = s.replace('{}', '');
// 		s = s.replace('[]', '');
// 		s = s.replace('()', '');
// 	}
// 	console.log(s === '');
// 	return s === '';
// };

isValid('{()}[][][]')